// Code generated by entc, DO NOT EDIT.

package githubissue

import (
	"fmt"
)

const (
	// Label holds the string label denoting the githubissue type in the database.
	Label = "git_hub_issue"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGithubID holds the string denoting the github_id field in the database.
	FieldGithubID = "github_id"
	// FieldNumber holds the string denoting the number field in the database.
	FieldNumber = "number"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldHTMLURL holds the string denoting the html_url field in the database.
	FieldHTMLURL = "html_url"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldLocked holds the string denoting the locked field in the database.
	FieldLocked = "locked"
	// FieldActiveLockReason holds the string denoting the active_lock_reason field in the database.
	FieldActiveLockReason = "active_lock_reason"
	// FieldCommentsCount holds the string denoting the comments_count field in the database.
	FieldCommentsCount = "comments_count"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldClosedAt holds the string denoting the closed_at field in the database.
	FieldClosedAt = "closed_at"
	// FieldAuthorAssociation holds the string denoting the author_association field in the database.
	FieldAuthorAssociation = "author_association"
	// EdgeAssignees holds the string denoting the assignees edge name in mutations.
	EdgeAssignees = "assignees"
	// EdgeAuthor holds the string denoting the author edge name in mutations.
	EdgeAuthor = "author"
	// EdgeClosedBy holds the string denoting the closed_by edge name in mutations.
	EdgeClosedBy = "closed_by"
	// AssigneesLabel holds the string label denoting the assignees edge type in the database.
	AssigneesLabel = "git_hub_issue_assignees"
	// AuthorInverseLabel holds the string label denoting the author inverse edge type in the database.
	AuthorInverseLabel = "git_hub_user_created_issues"
	// ClosedByInverseLabel holds the string label denoting the closed_by inverse edge type in the database.
	ClosedByInverseLabel = "git_hub_user_closed_issues"
)

var (
	// GithubIDValidator is a validator for the "github_id" field. It is called by the builders before save.
	GithubIDValidator func(int) error
	// NumberValidator is a validator for the "number" field. It is called by the builders before save.
	NumberValidator func(int) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DefaultLocked holds the default value on creation for the "locked" field.
	DefaultLocked bool
	// CommentsCountValidator is a validator for the "comments_count" field. It is called by the builders before save.
	CommentsCountValidator func(int) error
	// CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	CreatedAtValidator func(string) error
	// UpdatedAtValidator is a validator for the "updated_at" field. It is called by the builders before save.
	UpdatedAtValidator func(string) error
	// ClosedAtValidator is a validator for the "closed_at" field. It is called by the builders before save.
	ClosedAtValidator func(string) error
)

// State defines the type for the "state" enum field.
type State string

// State values.
const (
	StateOpen   State = "open"
	StateClosed State = "closed"
)

func (s State) String() string {
	return string(s)
}

// StateValidator is a validator for the "state" field enum values. It is called by the builders before save.
func StateValidator(s State) error {
	switch s {
	case StateOpen, StateClosed:
		return nil
	default:
		return fmt.Errorf("githubissue: invalid enum value for state field: %q", s)
	}
}
